{"version":3,"sources":["./src/app/account/account-routing.module.ts","./src/app/account/account.module.ts","./src/app/account/login/login.component.ts","./src/app/account/login/login.component.html","./src/app/account/register/register.component.ts","./src/app/account/register/register.component.html"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [CommonModule, AccountRoutingModule, SharedModule],\n})\nexport class AccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n  constructor(private accountService: AccountService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.createLoginForm();\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n  }\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required,\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    console.log(this.loginForm.value);\n    this.accountService.login(this.loginForm.value)\n      .subscribe(response => {\n        this.router.navigateByUrl(this.returnUrl);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n      </div>\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n        Sign in\n      </button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { timer, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  errors: string[];\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n  onSubmit() {\n    this.accountService.register(this.registerForm.value)\n      .subscribe(() => {\n        this.router.navigateByUrl('/shop');\n      }, error => {\n        console.log(error);\n        this.errors = error.errors;\n      });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n              return res ? {emailExists: true} : null;\n            })\n          );\n        })\n      );\n    };\n  }\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\n        ],\n        [\n          this.validateEmailNotTaken()\n        ]\n      ],\n      password: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(\n            `(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$`\n          ),\n        ],\n      ],\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n      </div>\n      <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n        <li *ngFor=\"let item of errors\">\n          {{item}}\n        </li>\n      </ul>\n\n      <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n        Register\n      </button>\n    </form>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}