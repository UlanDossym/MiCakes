{"version":3,"sources":["webpack:///src/app/account/account-routing.module.ts","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/login/login.component.ts","webpack:///src/app/account/login/login.component.html","webpack:///src/app/account/register/register.component.ts","webpack:///src/app/account/register/register.component.html"],"names":["routes","path","component","AccountRoutingModule","forChild","declarations","imports","exports","AccountModule","LoginComponent","accountService","router","activatedRoute","createLoginForm","returnUrl","snapshot","queryParams","loginForm","email","required","pattern","password","console","log","value","login","subscribe","response","navigateByUrl","error","onSubmit","selector","templateUrl","styleUrls","RegisterComponent","fb","createRegisterForm","register","registerForm","errors","control","pipe","checkEmailExists","res","emailExists","group","displayName","validateEmailNotTaken"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'register', component: RegisterComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { AccountRoutingModule } from './account-routing.module';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [LoginComponent, RegisterComponent],\n  imports: [CommonModule, AccountRoutingModule, SharedModule],\n})\nexport class AccountModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  returnUrl: string;\n  constructor(private accountService: AccountService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.createLoginForm();\n    this.returnUrl = this.activatedRoute.snapshot.queryParams.returnUrl || '/shop';\n  }\n  createLoginForm() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required,\n        Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$')]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  onSubmit() {\n    console.log(this.loginForm.value);\n    this.accountService.login(this.loginForm.value)\n      .subscribe(response => {\n        this.router.navigateByUrl(this.returnUrl);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Login</h1>\n      </div>\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <button [disabled]=\"loginForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n        Sign in\n      </button>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AsyncValidatorFn } from '@angular/forms';\nimport { AccountService } from '../account.service';\nimport { Router } from '@angular/router';\nimport { timer, of } from 'rxjs';\nimport { switchMap, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  errors: string[];\n  registerForm: FormGroup;\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.createRegisterForm();\n  }\n  onSubmit() {\n    this.accountService.register(this.registerForm.value)\n      .subscribe(() => {\n        this.router.navigateByUrl('/shop');\n      }, error => {\n        console.log(error);\n        this.errors = error.errors;\n      });\n  }\n\n  validateEmailNotTaken(): AsyncValidatorFn {\n    return control => {\n      return timer(500).pipe(\n        switchMap(() => {\n          if (!control.value) {\n            return of(null);\n          }\n          return this.accountService.checkEmailExists(control.value).pipe(\n            map(res => {\n              return res ? {emailExists: true} : null;\n            })\n          );\n        })\n      );\n    };\n  }\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      displayName: [null, [Validators.required]],\n      email: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern('^[\\\\w-\\\\.]+@([\\\\w-]+\\\\.)+[\\\\w-]{2,4}$'),\n        ],\n        [\n          this.validateEmailNotTaken()\n        ]\n      ],\n      password: [\n        null,\n        [\n          Validators.required,\n          Validators.pattern(\n            `(?=^.{6,10}$)(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%^&amp;*()_+}{&quot;:;'?/&gt;.&lt;,])(?!.*\\s).*$`\n          ),\n        ],\n      ],\n    });\n  }\n\n}\n","<div class=\"d-flex justify-content-center mt-5\">\n  <div class=\"col-3\">\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\" autocomplete=\"off\">\n      <div class=\"text-center mb-4\">\n        <h1 class=\"h3 mb-3 font-weight-normal\">Register</h1>\n      </div>\n      <app-text-input formControlName=\"displayName\" [label]=\"'Display Name'\"></app-text-input>\n      <app-text-input formControlName=\"email\" [label]=\"'Email Address'\"></app-text-input>\n      <app-text-input formControlName=\"password\" [label]=\"'Password'\" [type]=\"'password'\"></app-text-input>\n\n      <ul class=\"text-danger list-unstyled\" *ngIf=\"errors\">\n        <li *ngFor=\"let item of errors\">\n          {{item}}\n        </li>\n      </ul>\n\n      <button [disabled]=\"registerForm.invalid\" class=\"btn btn-lg btn-primary btn-block\" type=\"submit\">\n        Register\n      </button>\n    </form>\n  </div>\n</div>\n"]}